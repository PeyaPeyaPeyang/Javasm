{
  parserClass="tokyo.peya.plugin.javasm.langasm.parser.JalParser"
  psiPackage="tokyo.peya.plugin.javasm.langasm.psi"
  psiImplPackage="tokyo.peya.plugin.javasm.langasm.psi.impl"
  extends="com.intellij.lang.parser.GeneratedParserUtilBase"
  psiClassPrefix="JAL"

  tokens=[
    SEMI=";"
    COMMA=","
    COLON=":"
    DOT="."
    EQ="="
    LP="("
    RP=")"
    LBR="{"
    RBR="}"
    LBK="["
    RBK="]"

    KWD_CLASS="class"
    KWD_INTERFACE="interface"

    // <editor-fold desc="Access Modifiers and Attributes">
    KWD_ACC_PUBLIC="public"
    KWD_ACC_PRIVATE="private"
    KWD_ACC_PROTECTED="protected"
    KWD_ACC_ATTR_STATIC="static"
    KWD_ACC_ATTR_FINAL="final"
    KWD_ACC_ATTR_ABSTRACT="abstract"
    KWD_ACC_ATTR_NATIVE="native"
    KWD_ACC_ATTR_SYNCHRONIZED="synchronized"
    KWD_ACC_ATTR_TRANSIENT="transient"
    KWD_ACC_ATTR_VOLATILE="volatile"
    KWD_ACC_ATTR_STRICTFP="strictfp"
    KWD_ACC_ATTR_SYNTHETIC="synthetic"
    // </editor-fold>

    KWD_MNAME_INIT="<init>"
    KWD_MNAME_CLINIT="<clinit>"
    KWD_SWITCH_DEFAULT="default"

    // <editor-fold desc="Type and Method Descriptions">
    // Current: JVM SE 24
    INSN_AALOAD="aaload"
    INSN_AASTORE="aastore"
    INSN_ACONST_NULL="aconst_null"
    INSN_ALOAD="aload"
    INSN_ALOAD_0="aload_0"
    INSN_ALOAD_1="aload_1"
    INSN_ALOAD_2="aload_2"
    INSN_ALOAD_3="aload_3"
    INSN_ALOAD_4="aload_4"
    INSN_ANEWARRAY="anewarray"
    INSN_ARETURN="areturn"
    INSN_ARRAYLENGTH="arraylength"
    INSN_ASTORE="astore"
    INSN_ASTORE_0="astore_0"
    INSN_ASTORE_1="astore_1"
    INSN_ASTORE_2="astore_2"
    INSN_ASTORE_3="astore_3"
    INSN_ATHROW="athrow"
    INSN_BALOAD="baload"
    INSN_BASTORE="bastore"
    INSN_BIPUSH="bipush"
    INSN_CALOAD="caload"
    INSN_CASTORE="castore"
    INSN_CHECKCAST="checkcast"
    INSN_D2F="d2f"
    INSN_D2I="d2i"
    INSN_D2L="d2l"
    INSN_DADD="dadd"
    INSN_DALOAD="daload"
    INSN_DASTORE="dastore"
    INSN_DCMPG="dcmpg"
    INSN_DCMPL="dcmpl"
    INSN_DCONST_0="dconst_0"
    INSN_DCONST_1="dconst_1"
    INSN_DDIV="ddiv"
    INSN_DLOAD="dload"
    INSN_DLOAD_0="dload_0"
    INSN_DLOAD_1="dload_1"
    INSN_DLOAD_2="dload_2"
    INSN_DLOAD_3="dload_3"
    INSN_DMUL="dmul"
    INSN_DNEG="dneg"
    INSN_DREM="drem"
    INSN_DRETURN="dreturn"
    INSN_DSTORE="dstore"
    INSN_DSTORE_0="dstore_0"
    INSN_DSTORE_1="dstore_1"
    INSN_DSTORE_2="dstore_2"
    INSN_DSTORE_3="dstore_3"
    INSN_DSUB="dsub"
    INSN_DUP="dup"
    INSN_DUP_X1="dup_x1"
    INSN_DUP_X2="dup_x2"
    INSN_DUP2="dup2"
    INSN_DUP2_X1="dup2_x1"
    INSN_DUP2_X2="dup2_x2"
    INSN_F2D="f2d"
    INSN_F2I="f2i"
    INSN_F2L="f2l"
    INSN_FADD="fadd"
    INSN_FALOAD="faload"
    INSN_FASTORE="fastore"
    INSN_FCMPG="fcmpg"
    INSN_FCMPL="fcmpl"
    INSN_FCONST_0="fconst_0"
    INSN_FCONST_1="fconst_1"
    INSN_FCONST_2="fconst_2"
    INSN_FDIV="fdiv"
    INSN_FLOAD="fload"
    INSN_FLOAD_0="fload_0"
    INSN_FLOAD_1="fload_1"
    INSN_FLOAD_2="fload_2"
    INSN_FLOAD_3="fload_3"
    INSN_FMUL="fmul"
    INSN_FNEG="fneg"
    INSN_FREM="frem"
    INSN_FRETURN="freturn"
    INSN_FSTORE="fstore"
    INSN_FSTORE_0="fstore_0"
    INSN_FSTORE_1="fstore_1"
    INSN_FSTORE_2="fstore_2"
    INSN_FSTORE_3="fstore_3"
    INSN_FSUB="fsub"
    INSN_GETFIELD="getfield"
    INSN_GETSTATIC="getstatic"
    INSN_GOTO="goto"
    INSN_GOTO_W="goto_w"
    INSN_I2B="i2b"
    INSN_I2C="i2c"
    INSN_I2D="i2d"
    INSN_I2F="i2f"
    INSN_I2L="i2l"
    INSN_I2S="i2s"
    INSN_IADD="iadd"
    INSN_IALOAD="iaload"
    INSN_IAND="iand"
    INSN_IASTORE="iastore"
    INSN_ICONST_M1="iconst_m1"
    INSN_ICONST_0="iconst_0"
    INSN_ICONST_1="iconst_1"
    INSN_ICONST_2="iconst_2"
    INSN_ICONST_3="iconst_3"
    INSN_ICONST_4="iconst_4"
    INSN_ICONST_5="iconst_5"
    INSN_ICONST_6="iconst_6"
    INSN_ICONST_7="iconst_7"
    INSN_ICONST_8="iconst_8"
    INSN_IDIV="idiv"
    INSN_IF_ACMPEQ="if_acmpeq"
    INSN_IF_ACMPNE="if_acmpne"
    INSN_IF_ICMPEQ="if_icmpeq"
    INSN_IF_ICMPNE="if_icmpne"
    INSN_IF_ICMPLT="if_icmplt"
    INSN_IF_ICMPGE="if_icmpge"
    INSN_IF_ICMPGT="if_icmpgt"
    INSN_IF_ICMPLE="if_icmple"
    INSN_IFEQ="ifeq"
    INSN_IFNE="ifne"
    INSN_IFLT="iflt"
    INSN_IFGE="ifge"
    INSN_IFGT="ifgt"
    INSN_IFLE="ifle"
    INSN_IFNONNULL="ifnonnull"
    INSN_IFNULL="ifnull"
    INSN_IINC="iinc"
    INSN_ILOAD="iload"
    INSN_ILOAD_0="iload_0"
    INSN_ILOAD_1="iload_1"
    INSN_ILOAD_2="iload_2"
    INSN_ILOAD_3="iload_3"
    INSN_IMUL="imul"
    INSN_INEG="ineg"
    INSN_INSTANCEOF="instanceof"
    INSN_INVOKEDYNAMIC="invokedynamic"
    INSN_INVOKEINTERFACE="invokeinterface"
    INSN_INVOKESPECIAL="invokespecial"
    INSN_INVOKESTATIC="invokestatic"
    INSN_INVOKEVIRTUAL="invokevirtual"
    INSN_IOR="ior"
    INSN_IREM="irem"
    INSN_IRETURN="ireturn"
    INSN_ISHL="ishl"
    INSN_ISHR="ishr"
    INSN_ISTORE="istore"
    INSN_ISTORE_0="istore_0"
    INSN_ISTORE_1="istore_1"
    INSN_ISTORE_2="istore_2"
    INSN_ISTORE_3="istore_3"
    INSN_ISUB="isub"
    INSN_IUSHR="iushr"
    INSN_IXOR="ixor"
    INSN_JSR="jsr"
    INSN_JSR_W="jsr_w"
    INSN_L2D="l2d"
    INSN_L2F="l2f"
    INSN_L2I="l2i"
    INSN_LADD="ladd"
    INSN_LALOAD="laload"
    INSN_LAND="land"
    INSN_LASTORE="lastore"
    INSN_LCMP="lcmp"
    INSN_LCONST_0="lconst_0"
    INSN_LCONST_1="lconst_1"
    INSN_LDC="ldc"
    INSN_LDC_W="ldc_w"
    INSN_LDC2_W="ldc2_w"
    INSN_LDIV="ldiv"
    INSN_LLOAD="lload"
    INSN_LLOAD_0="lload_0"
    INSN_LLOAD_1="lload_1"
    INSN_LLOAD_2="lload_2"
    INSN_LLOAD_3="lload_3"
    INSN_LMUL="lmul"
    INSN_LNEG="lneg"
    INSN_LOOKUPSWITCH="lookupswitch"
    INSN_LOR="lor"
    INSN_LREM="lrem"
    INSN_LRETURN="lreturn"
    INSN_LSHL="lshl"
    INSN_LSHR="lshr"
    INSN_LSTORE="lstore"
    INSN_LSTORE_0="lstore_0"
    INSN_LSTORE_1="lstore_1"
    INSN_LSTORE_2="lstore_2"
    INSN_LSTORE_3="lstore_3"
    INSN_LSUB="lsub"
    INSN_LUSHR="lushr"
    INSN_LXOR="lxor"
    INSN_MONITORENTER="monitorenter"
    INSN_MONITOREXIT="monitorexit"
    INSN_MULTIANEWARRAY="multianewarray"
    INSN_NEW="new"
    INSN_NEWARRAY="newarray"
    INSN_NOP="nop"
    INSN_POP="pop"
    INSN_POP2="pop2"
    INSN_PUTFIELD="putfield"
    INSN_PUTSTATIC="putstatic"
    INSN_RET="ret"
    INSN_RETURN="return"
    INSN_SALOAD="saload"
    INSN_SASTORE="sastore"
    INSN_SIPUSH="sipush"
    INSN_SWAP="swap"
    INSN_TABLESWITCH="tableswitch"
    INSN_WIDE="wide"
    // </editor-fold>

    INSN_ARG_UNSIG_8BYTES="regexp:0x[0-9a-fA-F]{1,8}|\d+"

    TYPE_DESC="regexp:\[*([BCDFIJSZ]|L([^;\n\r]+);)"
    METHOD_DESC="regexp:\((\[*([BCDFIJSZV]|L([^;\n\r]+);))*\)(\[*[BCDFIJSZV]|L([^;\n\r]+);)?"
    // <editor-fold desc="Meta characters">

    space="regexp:\s+"
    id="regexp:[\w$]+"
    string="regexp:('([^'\\]|\\.)*'|\"([^\"\\]|\\\"|\\'|\\)*\")"
    number="regexp:\d+"
    line_comment="regexp://.*"
    block_comment="regexp:/\*(.|\n)*\*/"

    // </editor-fold>
  ]

  name("accMod.*") = "accessModifier"
  name("accAttr.*") = "accessAttribute"
  name("jvmIns.*") = "JVMInstruction"
  extends("jvmIns.*")=instruction
}

root ::= classDefinition?

classDefinition ::= accModClass (KWD_CLASS| KWD_INTERFACE) id (LP classMeta? RP)? LBR classBody RBR {pin=2}
classMeta ::= classMetaItem (COMMA classMetaItem)*
classBody ::= classBodyItem*

classMetaItem ::= classMetaKey EQ classMetaValue { pin=1 }
classMetaKey ::= id { pin=1 }
classMetaValue ::= string | number

private classBodyItem ::= fieldDefinition | methodDefinition
fieldDefinition ::= accModField id COLON TYPE_DESC { pin=3 }
methodDefinition ::= accModMethod methodName METHOD_DESC methodBody { pin=3 }

private methodName ::= id | KWD_MNAME_INIT | KWD_MNAME_CLINIT
private methodBody ::= LBR methodBodyItem RBR { pin=1 }
private methodBodyItem ::= (instruction | label)*

label ::= labelName COLON { pin=2 }
private labelName ::= jvmInsArgUnsigned8Bytes | id { pin=1 }

accModClass ::= accessLevel? accAttrClass*
accModField ::= accessLevel? accAttrField*
accModMethod ::= accessLevel? accAttrMethod*
accessLevel ::= KWD_ACC_PUBLIC | KWD_ACC_PRIVATE | KWD_ACC_PROTECTED
accAttrClass ::= KWD_ACC_ATTR_STATIC | KWD_ACC_ATTR_FINAL | KWD_ACC_ATTR_ABSTRACT | KWD_ACC_ATTR_SYNTHETIC
accAttrMethod ::= KWD_ACC_ATTR_STATIC | KWD_ACC_ATTR_FINAL | KWD_ACC_ATTR_ABSTRACT | KWD_ACC_ATTR_NATIVE
                  | KWD_ACC_ATTR_SYNCHRONIZED | KWD_ACC_ATTR_TRANSIENT | KWD_ACC_ATTR_VOLATILE | KWD_ACC_ATTR_STRICTFP
                  | KWD_ACC_ATTR_SYNTHETIC
accAttrField ::= KWD_ACC_ATTR_STATIC | KWD_ACC_ATTR_FINAL | KWD_ACC_ATTR_TRANSIENT | KWD_ACC_ATTR_VOLATILE | KWD_ACC_ATTR_STRICTFP | KWD_ACC_ATTR_SYNTHETIC

jvmInsArgUnsigned8Bytes ::= INSN_ARG_UNSIG_8BYTES
jvmInsArgScalarType ::= string | number | jvmInsArgUnsigned8Bytes

jvmInsArgFieldRef ::= jvmInsArgFieldRefType "->" jvmInsArgFieldRefName COLON jvmInsArgFieldRefType {pin = 1}
jvmInsArgFieldRefType ::= TYPE_DESC
jvmInsArgFieldRefName ::= id

jvmInsArgMethodRef ::= (jvmInsArgMethodRefOwnerType "->")? methodName jvmInsArgMethodRefDesc {pin = 1}
jvmInsArgMethodSpecialRef ::= jvmInsArgMethodRefOwnerType "->" (KWD_MNAME_INIT | KWD_MNAME_CLINIT) jvmInsArgMethodRefDesc {pin = 1}
jvmInsArgMethodRefOwnerType ::= TYPE_DESC
jvmInsArgMethodRefDesc ::= METHOD_DESC

jvmInsArgLocalRef ::= jvmInsArgUnsigned8Bytes | id

jvmInsArgLookupSwitch ::= LBR jvmInsArgLookupSwitchCase (SEMI jvmInsArgLookupSwitchCase)* RBR {pin = 1}
jvmInsArgLookupSwitchCase ::= jvmInsArgLookupSwitchCaseName COLON labelName {pin = 2}
jvmInsArgLookupSwitchCaseName ::= jvmInsArgUnsigned8Bytes | KWD_SWITCH_DEFAULT

jvmInsArgTableSwitch ::= jvmInsArgUnsigned8Bytes LBR labelName* RBR  KWD_SWITCH_DEFAULT labelName {pin = 2}

instruction ::= jvmInsAaload | jvmInsAastore  | jvmInsAconstNull | jvmInsAload | jvmInsAloadN  | jvmInsAnewArray
                | jvmInsAreturn | jvmInsArraylength | jvmInsAstore | jvmInsAstoreN | jvmInsAthrow | jvmInsBaload
                | jvmInsBastore | jvmInsBipush | jvmInsCaload | jvmInsCastore | jvmInsCheckcast | jvmInsD2F
                | jvmInsD2I | jvmInsD2L | jvmInsDadd | jvmInsDaload | jvmInsDastore | jvmInsDcmpOP | jvmInsDconstN
                | jvmInsDdiv | jvmInsDload | jvmInsDloadN | jvmInsDmul | jvmInsDneg | jvmInsDrem  | jvmInsDreturn
                | jvmInsDstore | jvmInsDstoreN | jvmInsDsub | jvmInsDup | jvmInsDupX1 | jvmInsDupX2 | jvmInsDup2
                | jvmInsDup2X1 | jvmInsDup2X2 | jvmInsF2D | jvmInsF2I | jvmInsF2L | jvmInsFadd | jvmInsFaload
                | jvmInsFastore | jvmInsFcmpgOP | jvmInsFconstN | jvmInsFdiv | jvmInsFload | jvmInsFloadN | jvmInsFmul
                | jvmInsFneg | jvmInsFrem | jvmInsFreturn | jvmInsFstore | jvmInsFstoreN | jvmInsFsub | jvmInsGetfield
                | jvmInsGetstatic | jvmInsGoto | jvmInsGotoW | jvmInsI2B | jvmInsI2C | jvmInsI2D | jvmInsI2F
                | jvmInsI2L | jvmInsI2S | jvmInsIadd | jvmInsIaload | jvmInsIand | jvmInsIastore | jvmInsIconstN
                | jvmInsIdiv | jvmInsIfAcmpOP | jvmInsIfIcmpOP | jvmInsIfOP | jvmInsIfNonnull | jvmInsIfNull
                | jvmInsIinc | jvmInsIload | jvmInsIloadN | jvmInsImul | jvmInsIneg | jvmInsInstanceof
                | jvmInsInvokedynamic | jvmInsInvokeinterface  | jvmInsInvokespecial | jvmInsInvokestatic
                | jvmInsInvokevirtual | jvmInsIor | jvmInsIrem | jvmInsIreturn | jvmInsIshl | jvmInsIshr | jvmInsIstore
                | jvmInsIstoreN | jvmInsIsub | jvmInsIushr | jvmInsIxor | jvmInsJsr | jvmInsJsrW | jvmInsL2D
                | jvmInsL2F | jvmInsL2I | jvmInsLadd | jvmInsLaload | jvmInsLand | jvmInsLastore | jvmInsLcmp
                | jvmInsLconstN | jvmInsLdc | jvmInsLdcW | jvmInsLdc2W | jvmInsLdiv | jvmInsLload | jvmInsLloadN
                | jvmInsLmul | jvmInsLneg | jvmInsLookupswitch | jvmInsLor | jvmInsLrem | jvmInsLreturn | jvmInsLshl
                | jvmInsLshr | jvmInsLstore | jvmInsLstoreN | jvmInsLsub | jvmInsLushr | jvmInsLxor | jvmInsMonitorenter
                | jvmInsMonitorexit | jvmInsMultianewarray | jvmInsNew | jvmInsNewarray | jvmInsNop | jvmInsPop
                | jvmInsPop2 | jvmInsPutfield | jvmInsPutstatic | jvmInsRet | jvmInsReturn | jvmInsSaload
                | jvmInsSastore | jvmInsSipush | jvmInsSwap | jvmInsTableswitch | jvmInsWide
jvmInsAaload ::= INSN_AALOAD
jvmInsAastore ::= INSN_AASTORE jvmInsArgLocalRef {pin = 1}
jvmInsAconstNull ::= INSN_ACONST_NULL
jvmInsAload ::= INSN_ALOAD jvmInsArgLocalRef {pin = 1}
jvmInsAloadN ::= INSN_ALOAD_0 | INSN_ALOAD_1 | INSN_ALOAD_2 | INSN_ALOAD_3 | INSN_ALOAD_4
jvmInsAnewArray ::= INSN_ANEWARRAY TYPE_DESC {pin = 1}
jvmInsAreturn ::= INSN_ARETURN
jvmInsArraylength ::= INSN_ARRAYLENGTH
jvmInsAstore ::= INSN_ASTORE
jvmInsAstoreN ::= INSN_ASTORE_0 | INSN_ASTORE_1 | INSN_ASTORE_2 | INSN_ASTORE_3
jvmInsAthrow ::= INSN_ATHROW
jvmInsBaload ::= INSN_BALOAD
jvmInsBastore ::= INSN_BASTORE jvmInsArgLocalRef {pin = 1}
jvmInsBipush ::= INSN_BIPUSH jvmInsArgUnsigned8Bytes {pin = 1}
jvmInsCaload ::= INSN_CALOAD
jvmInsCastore ::= INSN_CASTORE jvmInsArgLocalRef {pin = 1}
jvmInsCheckcast ::= INSN_CHECKCAST TYPE_DESC {pin = 1}
jvmInsD2F ::= INSN_D2F
jvmInsD2I ::= INSN_D2I
jvmInsD2L ::= INSN_D2L
jvmInsDadd ::= INSN_DADD
jvmInsDaload ::= INSN_DALOAD
jvmInsDastore ::= INSN_DASTORE jvmInsArgUnsigned8Bytes {pin = 1}
jvmInsDcmpOP ::= INSN_DCMPG | INSN_DCMPL
jvmInsDconstN ::= INSN_DCONST_0 | INSN_DCONST_1
jvmInsDdiv ::= INSN_DDIV
jvmInsDload ::= INSN_DLOAD jvmInsArgLocalRef {pin = 1}
jvmInsDloadN ::= INSN_DLOAD_0 | INSN_DLOAD_1 | INSN_DLOAD_2 | INSN_DLOAD_3
jvmInsDmul ::= INSN_DMUL
jvmInsDneg ::= INSN_DNEG
jvmInsDrem ::= INSN_DREM
jvmInsDreturn ::= INSN_DRETURN
jvmInsDstore ::= INSN_DSTORE jvmInsArgLocalRef {pin = 1}
jvmInsDstoreN ::= INSN_DSTORE_0 | INSN_DSTORE_1 | INSN_DSTORE_2 | INSN_DSTORE_3
jvmInsDsub ::= INSN_DSUB
jvmInsDup ::= INSN_DUP
jvmInsDupX1 ::= INSN_DUP_X1
jvmInsDupX2 ::= INSN_DUP_X2
jvmInsDup2 ::= INSN_DUP2
jvmInsDup2X1 ::= INSN_DUP2_X1
jvmInsDup2X2 ::= INSN_DUP2_X2
jvmInsF2D ::= INSN_F2D
jvmInsF2I ::= INSN_F2I
jvmInsF2L ::= INSN_F2L
jvmInsFadd ::= INSN_FADD
jvmInsFaload ::= INSN_FALOAD
jvmInsFastore ::= INSN_FASTORE jvmInsArgLocalRef {pin = 1}
jvmInsFcmpgOP ::= INSN_FCMPG | INSN_FCMPL
jvmInsFconstN ::= INSN_FCONST_0 | INSN_FCONST_1 | INSN_FCONST_2
jvmInsFdiv ::= INSN_FDIV
jvmInsFload ::= INSN_FLOAD jvmInsArgLocalRef {pin = 1}
jvmInsFloadN ::= INSN_FLOAD_0 | INSN_FLOAD_1 | INSN_FLOAD_2 | INSN_FLOAD_3
jvmInsFmul ::= INSN_FMUL
jvmInsFneg ::= INSN_FNEG
jvmInsFrem ::= INSN_FREM
jvmInsFreturn ::= INSN_FRETURN
jvmInsFstore ::= INSN_FSTORE
jvmInsFstoreN ::= INSN_FSTORE_0 | INSN_FSTORE_1 | INSN_FSTORE_2 | INSN_FSTORE_3
jvmInsFsub ::= INSN_FSUB
jvmInsGetfield ::= INSN_GETFIELD jvmInsArgFieldRef {pin = 1}
jvmInsGetstatic ::= INSN_GETSTATIC jvmInsArgFieldRef {pin = 1}
jvmInsGoto ::= INSN_GOTO (labelName | jvmInsArgUnsigned8Bytes) {pin = 1}
jvmInsGotoW ::= INSN_GOTO_W (labelName | jvmInsArgUnsigned8Bytes) {pin = 1}
jvmInsI2B ::= INSN_I2B
jvmInsI2C ::= INSN_I2C
jvmInsI2D ::= INSN_I2D
jvmInsI2F ::= INSN_I2F
jvmInsI2L ::= INSN_I2L
jvmInsI2S ::= INSN_I2S
jvmInsIadd ::= INSN_IADD
jvmInsIaload ::= INSN_IALOAD
jvmInsIand ::= INSN_IAND
jvmInsIastore ::= INSN_IASTORE jvmInsArgUnsigned8Bytes {pin = 1}
jvmInsIconstN ::= INSN_ICONST_M1 | INSN_ICONST_0 | INSN_ICONST_1 | INSN_ICONST_2 | INSN_ICONST_3 | INSN_ICONST_4
                  | INSN_ICONST_5 | INSN_ICONST_6 | INSN_ICONST_7 | INSN_ICONST_8
jvmInsIdiv ::= INSN_IDIV
jvmInsIfAcmpOP ::= INSN_IF_ACMPEQ (labelName | jvmInsArgUnsigned8Bytes)
                   | INSN_IF_ACMPNE (labelName | jvmInsArgUnsigned8Bytes)
jvmInsIfIcmpOP ::= INSN_IF_ICMPEQ (labelName | jvmInsArgUnsigned8Bytes)
                   | INSN_IF_ICMPNE (labelName | jvmInsArgUnsigned8Bytes)
                   | INSN_IF_ICMPLT (labelName | jvmInsArgUnsigned8Bytes)
                   | INSN_IF_ICMPGE (labelName | jvmInsArgUnsigned8Bytes)
                   | INSN_IF_ICMPGT (labelName | jvmInsArgUnsigned8Bytes)
                   | INSN_IF_ICMPLE (labelName | jvmInsArgUnsigned8Bytes)
jvmInsIfOP ::= INSN_IFEQ (labelName | jvmInsArgUnsigned8Bytes)
               | INSN_IFNE (labelName | jvmInsArgUnsigned8Bytes)
               | INSN_IFLT (labelName | jvmInsArgUnsigned8Bytes)
               | INSN_IFGE (labelName | jvmInsArgUnsigned8Bytes)
               | INSN_IFGT (labelName | jvmInsArgUnsigned8Bytes)
               | INSN_IFLE (labelName | jvmInsArgUnsigned8Bytes)
jvmInsIfNonnull ::= INSN_IFNONNULL (labelName | jvmInsArgUnsigned8Bytes) {pin = 1}
jvmInsIfNull ::= INSN_IFNULL (labelName | jvmInsArgUnsigned8Bytes) {pin = 1}
jvmInsIinc ::= INSN_IINC jvmInsArgLocalRef COMMA jvmInsArgUnsigned8Bytes {pin = 1}
jvmInsIload ::= INSN_ILOAD jvmInsArgLocalRef {pin = 1}
jvmInsIloadN ::= INSN_ILOAD_0 | INSN_ILOAD_1 | INSN_ILOAD_2 | INSN_ILOAD_3
jvmInsImul ::= INSN_IMUL
jvmInsIneg ::= INSN_INEG
jvmInsInstanceof ::= INSN_INSTANCEOF TYPE_DESC {pin = 1}
jvmInsInvokedynamic ::= INSN_INVOKEDYNAMIC jvmInsArgMethodRef jvmInsArgMethodRef jvmInsArgScalarType* {pin = 1}
jvmInsInvokeinterface ::= INSN_INVOKEINTERFACE jvmInsArgMethodRef jvmInsArgUnsigned8Bytes "0" {pin = 1}
jvmInsInvokespecial ::= INSN_INVOKESPECIAL jvmInsArgMethodSpecialRef {pin = 1}
jvmInsInvokestatic ::= INSN_INVOKESTATIC jvmInsArgMethodRef {pin = 1}
jvmInsInvokevirtual ::= INSN_INVOKEVIRTUAL jvmInsArgMethodRef {pin = 1}
jvmInsIor ::= INSN_IOR
jvmInsIrem ::= INSN_IREM
jvmInsIreturn ::= INSN_IRETURN
jvmInsIshl ::= INSN_ISHL
jvmInsIshr ::= INSN_ISHR
jvmInsIstore ::= INSN_ISTORE jvmInsArgLocalRef {pin = 1}
jvmInsIstoreN ::= INSN_ISTORE_0 | INSN_ISTORE_1 | INSN_ISTORE_2 | INSN_ISTORE_3
jvmInsIsub ::= INSN_ISUB
jvmInsIushr ::= INSN_IUSHR
jvmInsIxor ::= INSN_IXOR
jvmInsJsr ::= INSN_JSR (labelName | jvmInsArgUnsigned8Bytes) {pin = 1}
jvmInsJsrW ::= INSN_JSR_W (labelName | jvmInsArgUnsigned8Bytes) {pin = 1}
jvmInsL2D ::= INSN_L2D
jvmInsL2F ::= INSN_L2F
jvmInsL2I ::= INSN_L2I
jvmInsLadd ::= INSN_LADD
jvmInsLaload ::= INSN_LALOAD
jvmInsLand ::= INSN_LAND
jvmInsLastore ::= INSN_LASTORE jvmInsArgLocalRef {pin = 1}
jvmInsLcmp ::= INSN_LCMP
jvmInsLconstN ::= INSN_LCONST_0 | INSN_LCONST_1
jvmInsLdc ::= INSN_LDC jvmInsArgScalarType {pin = 1}
jvmInsLdcW ::= INSN_LDC_W jvmInsArgScalarType {pin = 1}
jvmInsLdc2W ::= INSN_LDC2_W jvmInsArgScalarType {pin = 1}
jvmInsLdiv ::= INSN_LDIV
jvmInsLload ::= INSN_LLOAD jvmInsArgLocalRef {pin = 1}
jvmInsLloadN ::= INSN_LLOAD_0 | INSN_LLOAD_1 | INSN_LLOAD_2 | INSN_LLOAD_3
jvmInsLmul ::= INSN_LMUL
jvmInsLneg ::= INSN_LNEG
jvmInsLookupswitch ::= INSN_LOOKUPSWITCH jvmInsArgLookupSwitch {pin = 1}
jvmInsLor ::= INSN_LOR
jvmInsLrem ::= INSN_LREM
jvmInsLreturn ::= INSN_LRETURN
jvmInsLshl ::= INSN_LSHL
jvmInsLshr ::= INSN_LSHR
jvmInsLstore ::= INSN_LSTORE jvmInsArgLocalRef {pin = 1}
jvmInsLstoreN ::= INSN_LSTORE_0 | INSN_LSTORE_1 | INSN_LSTORE_2 | INSN_LSTORE_3
jvmInsLsub ::= INSN_LSUB
jvmInsLushr ::= INSN_LUSHR
jvmInsLxor ::= INSN_LXOR
jvmInsMonitorenter ::= INSN_MONITORENTER
jvmInsMonitorexit ::= INSN_MONITOREXIT
jvmInsMultianewarray ::= INSN_MULTIANEWARRAY TYPE_DESC jvmInsArgUnsigned8Bytes {pin = 1}
jvmInsNew ::= INSN_NEW TYPE_DESC {pin = 1}
jvmInsNewarray ::= INSN_NEWARRAY TYPE_DESC {pin = 1}
jvmInsNop ::= INSN_NOP
jvmInsPop ::= INSN_POP
jvmInsPop2 ::= INSN_POP2
jvmInsPutfield ::= INSN_PUTFIELD jvmInsArgFieldRef {pin = 1}
jvmInsPutstatic ::= INSN_PUTSTATIC jvmInsArgFieldRef {pin = 1}
jvmInsRet ::= INSN_RET jvmInsArgLocalRef {pin = 1}
jvmInsReturn ::= INSN_RETURN
jvmInsSaload ::= INSN_SALOAD
jvmInsSastore ::= INSN_SASTORE jvmInsArgLocalRef {pin = 1}
jvmInsSipush ::= INSN_SIPUSH jvmInsArgUnsigned8Bytes {pin = 1}
jvmInsSwap ::= INSN_SWAP
jvmInsTableswitch ::= INSN_TABLESWITCH jvmInsArgTableSwitch {pin = 1}
jvmInsWide ::= INSN_WIDE (
                 jvmInsIload | jvmInsFload | jvmInsAload | jvmInsLload | jvmInsDload | jvmInsIstore | jvmInsFstore
                 | jvmInsAstore | jvmInsDstore | jvmInsRet
               ) jvmInsArgUnsigned8Bytes {pin = 1}
